<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.lq</groupId>
	<artifactId>baseSpringBoot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>baseSpringBoot</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<asciidoctor.input.directory>${project.basedir}/docs/asciidoc</asciidoctor.input.directory>
	    <swagger.output.dir>${project.build.directory}/asciidoc</swagger.output.dir>
	    <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
	    <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
	    <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
	    <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
	    <swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
	</properties>
	<!-- 首先是两个远程仓库 -->
	<pluginRepositories>
	    <pluginRepository>
	        <id>jcenter-snapshots</id>
	        <name>jcenter</name>
	        <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
	    </pluginRepository>
	    <pluginRepository>
	        <id>jcenter-releases</id>
	        <name>jcenter</name>
	        <url>http://jcenter.bintray.com</url>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	    </pluginRepository>
	</pluginRepositories>
	<repositories>
	    <repository>
	        <id>jcentral</id>
	        <name>bintray</name>
	        <url>http://jcenter.bintray.com</url>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	    </repository>
	    <repository>
	        <id>jcenter-snapshots</id>
	        <name>jcenter</name>
	        <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
	    </repository>
	</repositories>
	<dependencies>
	<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
		<dependency>
		    <groupId>commons-codec</groupId>
		    <artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>1.1.1</version>
		</dependency>
		<dependency>
	        <groupId>mysql</groupId>
	        <artifactId>mysql-connector-java</artifactId>
	    </dependency>
	    <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0.1.0</version>
        </dependency>
	     <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>
	     <!-- servlet依赖. -->
        <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>javax.servlet-api</artifactId>
             <scope>provided</scope>
        </dependency>
        <!-- tomcat的支持.-->
        <dependency>
               <groupId>org.springframework.boot</groupId>
               <artifactId>spring-boot-starter-tomcat</artifactId>
               <scope>provided</scope>
        </dependency>
        <dependency>
               <groupId>org.apache.tomcat.embed</groupId>
               <artifactId>tomcat-embed-jasper</artifactId>
               <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.3.2</version>
		</dependency>
        
        <!-- https://mvnrepository.com/artifact/com.google.collections/google-collections -->
		<!-- <dependency>
		    <groupId>com.google.collections</groupId>
		    <artifactId>google-collections</artifactId>
		    <version>1.0-rc2</version>
		</dependency> -->
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.43</version>
		</dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpcore</artifactId>  
		    <version>4.4.6</version><!--$NO-MVN-MAN-VER$-->  
		</dependency>  
		<dependency>  
		    <groupId>org.apache.httpcomponents</groupId>  
		    <artifactId>httpclient</artifactId>  
		    <version>4.5.3</version><!--$NO-MVN-MAN-VER$-->  
		</dependency>  
		<!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
		<dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId>
		</dependency>
		
		<dependency>  
		     <groupId>org.springframework.session</groupId>  
		     <artifactId>spring-session-data-redis</artifactId>  
		</dependency>  
		
		
		<!-- kuaiyun -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.squareup.okhttp3</groupId>
		    <artifactId>okhttp</artifactId>
		    <version>3.9.1</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		</dependency>
		
		
		<dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-spring-boot-starter-jaxws</artifactId>
            <version>3.1.12</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.5</version>
		</dependency>
      
        <!--Swagger2-->
        <!--在线文档-->
        <!--swagger本身不支持spring mvc的，springfox把swagger包装了一下，让他可以支持springmvc-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>
        <!--离线文档-->
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <!--springfox-staticdocs 生成静态文档-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.6.1</version>
        </dependency>
         
		
		
	</dependencies>

	<build>
		<finalName>baseSpringBoot</finalName>
		<plugins>
			<!-- <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin> -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
			<!-- Run the generated asciidoc through Asciidoctor to generate
                 other documentation types, such as PDFs or HTML5 -->
            <!--通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5-->
           <plugin>
		    <groupId>io.github.swagger2markup</groupId>
		    <artifactId>swagger2markup-maven-plugin</artifactId>
		    <version>1.2.0</version>
		    <dependencies>
		        <dependency>
		            <groupId>io.github.swagger2markup</groupId>
		            <artifactId>swagger2markup-import-files-ext</artifactId>
		            <version>1.2.0</version>
		        </dependency>
		        <dependency>
		            <groupId>io.github.swagger2markup</groupId>
		            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>
		            <version>1.2.0</version>
		        </dependency>
		    </dependencies>
		    <configuration>
		        <swaggerInput>${swagger.input}</swaggerInput>
		        <outputDir>${generated.asciidoc.directory}</outputDir>
		        <config>
		            <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
		            <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
		            <swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
		            <swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
		            <swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
		            <swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>
		
		            <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
		            <swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
		        </config>
		    </configuration>
		    <executions>
		        <execution>
		            <phase>test</phase>
		            <goals>
		                <goal>convertSwagger2markup</goal>
		            </goals>
		        </execution>
		    </executions>
		</plugin>
<!-- 以下配置用于生成html和pdf -->
		<plugin>
		    <groupId>org.asciidoctor</groupId>
		    <artifactId>asciidoctor-maven-plugin</artifactId>
		    <version>1.5.3</version>
		    <dependencies>
		        <dependency>
		            <groupId>org.asciidoctor</groupId>
		            <artifactId>asciidoctorj-pdf</artifactId>
		            <version>1.5.0-alpha.10.1</version>
		        </dependency>
		        <dependency>
		            <groupId>org.jruby</groupId>
		            <artifactId>jruby-complete</artifactId>
		            <version>1.7.21</version>
		        </dependency>
		    </dependencies>
		    <configuration>
		        <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
		        <sourceDocumentName>index.adoc</sourceDocumentName>
		        <attributes>
		            <doctype>book</doctype>
		            <toc>left</toc>
		            <toclevels>3</toclevels>
		            <numbered></numbered>
		            <hardbreaks></hardbreaks>
		            <sectlinks></sectlinks>
		            <sectanchors></sectanchors>
		            <generated>${generated.asciidoc.directory}</generated>
		        </attributes>
		    </configuration>
		    <executions>
		        <execution>
		            <id>output-html</id>
		            <phase>test</phase>
		            <goals>
		                <goal>process-asciidoc</goal>
		            </goals>
		            <configuration>
		                <backend>html5</backend>
		                <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
		            </configuration>
		        </execution>
		
		        <execution>
		            <id>output-pdf</id>
		            <phase>test</phase>
		            <goals>
		                <goal>process-asciidoc</goal>
		            </goals>
		            <configuration>
		                <backend>pdf</backend>
		                <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
		            </configuration>
		        </execution>
		    </executions>
		</plugin>
		</plugins>
	</build>


</project>
